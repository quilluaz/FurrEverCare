package cit.edu.furrevercare.entity;

import com.google.cloud.Timestamp; // Use Firestore Timestamp for dates/times
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import cit.edu.furrevercare.config.jackson.TimestampDeserializer;
import cit.edu.furrevercare.config.jackson.TimestampSerializer;

import java.util.Map;

public class ScheduledTask {
    private String taskID; // Auto-generated by Firestore or Service
    private String petID; // Link to the Pet entity
    private String userID; // Link to the User entity
    private TaskType taskType; // Enum: MEDICATION, FEEDING, WALK, VET_VISIT, GROOMING, OTHER
    private String description; // e.g., "Administer Heartworm Pill", "Morning Walk", "Annual Checkup"

    @JsonSerialize(using = TimestampSerializer.class)
    @JsonDeserialize(using = TimestampDeserializer.class)
    private Timestamp scheduledDateTime; // Date and time the task is scheduled for

    private TaskStatus status; // Enum: PENDING, COMPLETED, SKIPPED, OVERDUE
    private String recurrenceRule; // Simple representation for now (e.g., "DAILY", "WEEKLY", "MONTHLY", "NONE")
                                  // Complex recurrence needs more logic
    private String notes; // Optional notes about the task

    @JsonSerialize(using = TimestampSerializer.class)
    @JsonDeserialize(using = TimestampDeserializer.class)
    private Timestamp completedAt; // Timestamp when the task was marked as completed

    // Enum for Task Type
    public enum TaskType {
        MEDICATION, FEEDING, WALK, VET_VISIT, GROOMING, APPOINTMENT, OTHER
    }

    // Enum for Task Status
    public enum TaskStatus {
        PENDING, COMPLETED, SKIPPED, OVERDUE
    }

    // Constructors
    public ScheduledTask() {}

    public ScheduledTask(String taskID, String petID, String userID, TaskType taskType, String description, Timestamp scheduledDateTime, TaskStatus status, String recurrenceRule, String notes, Timestamp completedAt) {
        this.taskID = taskID;
        this.petID = petID;
        this.userID = userID;
        this.taskType = taskType;
        this.description = description;
        this.scheduledDateTime = scheduledDateTime;
        this.status = status;
        this.recurrenceRule = recurrenceRule;
        this.notes = notes;
        this.completedAt = completedAt;
    }

    // Getters and Setters
    public String getTaskID() { return taskID; }
    public void setTaskID(String taskID) { this.taskID = taskID; }

    public String getPetID() { return petID; }
    public void setPetID(String petID) { this.petID = petID; }

    public String getUserID() { return userID; }
    public void setUserID(String userID) { this.userID = userID; }

    public TaskType getTaskType() { return taskType; }
    public void setTaskType(TaskType taskType) { this.taskType = taskType; }

    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }

    public Timestamp getScheduledDateTime() { return scheduledDateTime; }
    public void setScheduledDateTime(Timestamp scheduledDateTime) { this.scheduledDateTime = scheduledDateTime; }

    public TaskStatus getStatus() { return status; }
    public void setStatus(TaskStatus status) { this.status = status; }

    public String getRecurrenceRule() { return recurrenceRule; }
    public void setRecurrenceRule(String recurrenceRule) { this.recurrenceRule = recurrenceRule; }

    public String getNotes() { return notes; }
    public void setNotes(String notes) { this.notes = notes; }

    public Timestamp getCompletedAt() { return completedAt; }
    public void setCompletedAt(Timestamp completedAt) { this.completedAt = completedAt; }
}